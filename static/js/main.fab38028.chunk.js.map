{"version":3,"sources":["Theory/notes.ts","Theory/chords.ts","Components/FormattedChord.tsx","Components/FormattedNote.tsx","Components/ChordDefinition.tsx","Theory/chords.guitar.ts","Theory/tunings.guitar.ts","Components/StringChord.tsx","Components/ChordCard.tsx","Components/EmptyChordCard.tsx","Components/ChordCardCollection.tsx","Components/ChordSelector.tsx","Hooks/useStoringReducer.ts","Store/reducer.ts","Store/selectors.ts","theme.ts","App.tsx","Store/actions.ts","reportWebVitals.ts","index.tsx"],"names":["noteNames","notePattern","getNoteParts","note","exec","noteName","octave","Number","parseInt","transposeNoteName","Math","pow","semitoneDistance","index","indexOf","chordDefinitions","maj6","dom7","maj7","aug","aug7","min","min6","min7","chordNamePattern","getChordNameParts","chordName","ChordModifier","styled","span","theme","global","borderSize","small","FormattedChord","chord","rootNoteName","hash","chordModifier","FormattedNote","ChordDefinition","isEditing","onRemoveChord","chordNotes","map","x","getChordNotes","Card","pad","horizontal","vertical","background","border","side","color","Heading","level","size","margin","Box","direction","gap","align","top","Text","n","i","Collapsible","open","Button","icon","Trash","a11yTitle","onClick","chords","guitar","C","D","Dmin","E","Emin","G","A","Amin","B","guitalele","tunings","StyledTable","table","xsmall","colors","dark","PushedNoteCircle","div","StyledTd","td","isStringMuted","isActive","css","isVisible","isPushed","StringChord","instrument","highlightedNote","onHighlightNote","chordsForInstrument","stringPositions","reversedPositions","reverse","maxPosition","p","reduce","acc","tuning","reversedTuning","reversedStringNotes","j","Array","fill","undefined","_","getNoteFromParts","sign","floor","abs","transposeNote","isHighlighted","s","Close","ChordCard","width","CardHeader","justify","CardBody","EmptyChordCard","Stack","interactiveChild","opacity","Add","textAlign","ChordCardCollection","useState","setHighlightedNote","Grid","columns","length","c","ChordSelector","onAddChord","onIsEditingChange","searchString","setSearchString","matchingChords","useMemo","label","value","filter","toLowerCase","includes","handleChange","useCallback","Select","options","valueKey","key","labelKey","closeOnChange","placeholder","searchPlaceholder","onSearch","onChange","Checkmark","Edit","primary","useStoringReducer","reducer","initialState","initializer","storingReducer","writeTimeoutRef","state","action","newState","window","clearTimeout","setTimeout","localStorage","setItem","JSON","stringify","console","log","error","createStoringReducer","readState","rawState","getItem","parse","readStoredState","useReducer","selectedChords","type","find","Error","getSelectedChords","deepMerge","grommet","black","white","brand","font","family","face","heading","button","radius","card","container","round","elevation","App","dispatch","selectors","availableChords","Object","keys","setIsEditing","handleAddChord","chordToAdd","handleRemoveChord","chordToRemove","Grommet","full","themeMode","Header","Main","Footer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fab38028.chunk.js","sourcesContent":["export type NoteName =\r\n  | 'C'\r\n  | 'C#'\r\n  | 'D'\r\n  | 'D#'\r\n  | 'E'\r\n  | 'F'\r\n  | 'F#'\r\n  | 'G'\r\n  | 'G#'\r\n  | 'A'\r\n  | 'A#'\r\n  | 'B';\r\n\r\nexport type OctaveNumber = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9;\r\n\r\nexport type Note = `${NoteName}${OctaveNumber}`;\r\n\r\nconst noteNames: NoteName[] = [\r\n  'C',\r\n  'C#',\r\n  'D',\r\n  'D#',\r\n  'E',\r\n  'F',\r\n  'F#',\r\n  'G',\r\n  'G#',\r\n  'A',\r\n  'A#',\r\n  'B',\r\n];\r\n\r\n// https://en.wikipedia.org/wiki/Interval_(music)#Main_intervals\r\nexport const intervalNames: Record<number, string> = {\r\n  0: 'perfect unison',\r\n  1: 'minor second',\r\n  2: 'major second',\r\n  3: 'minor third',\r\n  4: 'major third',\r\n  5: 'perfect fourth',\r\n  6: 'augmented fourth/diminished fifth',\r\n  7: 'perfect fifth',\r\n  8: 'minor sixth',\r\n  9: 'major sixth',\r\n  10: 'minor seventh',\r\n  11: 'major seventh',\r\n  12: 'perfect octave',\r\n};\r\n\r\nconst notePattern = /^\\s*([A-G]#?)(\\d)\\s*$/;\r\n\r\nexport const getNoteParts = (note: Note): [NoteName, OctaveNumber] => {\r\n  const [_, noteName, octave] = notePattern.exec(note) ?? [];\r\n  return [noteName as NoteName, Number.parseInt(octave) as OctaveNumber];\r\n};\r\n\r\nconst getNoteFromParts = (noteName: NoteName, octave: OctaveNumber): Note =>\r\n  `${noteName}${octave}` as Note;\r\n\r\nexport const isValidNote = (noteString: string): noteString is Note =>\r\n  notePattern.test(noteString);\r\n\r\nexport const getSemitoneDistance = (note1: Note, note2: Note): number => {\r\n  const [noteName1, octave1] = getNoteParts(note1);\r\n  const [noteName2, octave2] = getNoteParts(note2);\r\n  return (\r\n    12 * (octave2 - octave1) +\r\n    (noteNames.indexOf(noteName2) - noteNames.indexOf(noteName1))\r\n  );\r\n};\r\n\r\n// https://en.wikipedia.org/wiki/A440_(pitch_standard)\r\nconst standardPitch = {\r\n  note: 'A4' as Note,\r\n  frequency: 440, // Hz\r\n  semiToneRatio: Math.pow(2, 1 / 12),\r\n};\r\n\r\nexport const getNotePitch = (note: Note): number => {\r\n  const semitoneDistanceFromStandard = getSemitoneDistance(\r\n    standardPitch.note,\r\n    note,\r\n  );\r\n  return (\r\n    standardPitch.frequency *\r\n    Math.pow(standardPitch.semiToneRatio, semitoneDistanceFromStandard)\r\n  );\r\n};\r\n\r\nexport const transposeNoteName = (\r\n  noteName: NoteName,\r\n  semitoneDistance: number,\r\n) => {\r\n  const index = noteNames.indexOf(noteName);\r\n  const transposedIndex = (index + semitoneDistance) % 12;\r\n  return noteNames[transposedIndex];\r\n};\r\n\r\nexport const transposeNote = (note: Note, semitoneDistance: number) => {\r\n  const [noteName, octave] = getNoteParts(note);\r\n  const transposedNoteName = transposeNoteName(noteName, semitoneDistance);\r\n  const octaveDistance =\r\n    Math.sign(semitoneDistance) * Math.floor(Math.abs(semitoneDistance) / 12);\r\n  return getNoteFromParts(\r\n    transposedNoteName,\r\n    (octave + octaveDistance) as OctaveNumber,\r\n  );\r\n};\r\n","import { NoteName, transposeNoteName } from './notes';\r\n\r\nexport type ChordModifier =\r\n  | ''\r\n  | 'maj6'\r\n  | 'dom7'\r\n  | 'maj7'\r\n  | 'aug'\r\n  | 'aug7'\r\n  | 'min'\r\n  | 'min6'\r\n  | 'min7'; // ...more\r\n\r\nexport type ChordName = `${NoteName}${ChordModifier}`;\r\n\r\nexport type ChordDefinition = (\r\n  | 0\r\n  | 1\r\n  | 2\r\n  | 3\r\n  | 4\r\n  | 5\r\n  | 6\r\n  | 7\r\n  | 8\r\n  | 9\r\n  | 10\r\n  | 11\r\n)[];\r\n\r\n// https://en.wikipedia.org/wiki/Chord_(music)#Examples\r\nconst chordDefinitions: Record<ChordModifier, ChordDefinition> = {\r\n  '': [0, 4, 7], // major\r\n  maj6: [0, 4, 7, 9], // major 6th\r\n  dom7: [0, 4, 7, 10], // dominant 7th\r\n  maj7: [0, 4, 7, 11], // major 7th\r\n\r\n  aug: [0, 4, 8], // augmented\r\n  aug7: [0, 4, 8, 10], //augmented 7th\r\n\r\n  min: [0, 3, 7], // minor\r\n  min6: [0, 3, 7, 9], // minor 6th\r\n  min7: [0, 3, 7, 10], // minor 7th\r\n};\r\n\r\nconst chordNamePattern = /^\\s*([A-G]#?)(|maj6|dom7|maj7|aug|aug7|min|min6|min7)\\s*$/;\r\n\r\nconst getChordNameParts = (chordName: ChordName): [NoteName, ChordModifier] => {\r\n  const [_, rootNoteName, chordModifier] =\r\n    chordNamePattern.exec(chordName) ?? [];\r\n  return [rootNoteName as NoteName, chordModifier as ChordModifier];\r\n};\r\n\r\nconst getChordNameFromParts = (\r\n  rootNoteName: NoteName,\r\n  chordModifier: ChordModifier,\r\n): ChordName => `${rootNoteName}${chordModifier}` as ChordName;\r\n\r\nexport const isValidChordName = (\r\n  chordNameString: string,\r\n): chordNameString is ChordName => chordNamePattern.test(chordNameString);\r\n\r\nexport const getChordNotes = (chordName: ChordName): NoteName[] => {\r\n  const [rootNoteName, chordModifier] = getChordNameParts(chordName);\r\n  const chordDefinition = chordDefinitions[chordModifier];\r\n  return chordDefinition.map((x) => transposeNoteName(rootNoteName, x));\r\n};\r\n\r\nexport const transposeChord = (\r\n  chordName: ChordName,\r\n  semitoneDistance: number,\r\n): ChordName => {\r\n  const [rootNoteName, chordModifier] = getChordNameParts(chordName);\r\n  const transposedNoteName = transposeNoteName(rootNoteName, semitoneDistance);\r\n  return getChordNameFromParts(transposedNoteName, chordModifier);\r\n};\r\n","import styled from 'styled-components';\r\nimport { ChordName } from '../Theory/chords';\r\n\r\nconst chordNamePattern = /^\\s*([A-G])(#)?(|maj6|dom7|maj7|aug|aug7|min|min6|min7)\\s*$/;\r\n\r\nconst getNoteParts = (chord: ChordName) => {\r\n  const [_, rootNoteName, hash, chordModifier] =\r\n    chordNamePattern.exec(chord) ?? [];\r\n  return [rootNoteName, hash, chordModifier];\r\n};\r\n\r\nconst ChordModifier = styled.span`\r\n  padding-left: ${({ theme }) => theme.global.borderSize.small};\r\n`;\r\n\r\nexport interface Props {\r\n  chord: ChordName | undefined;\r\n}\r\n\r\nconst FormattedChord = ({ chord }: Props) => {\r\n  const [rootNoteName, hash, chordModifier] = chord ? getNoteParts(chord) : [];\r\n  return (\r\n    <span>\r\n      {rootNoteName || <>&nbsp;</>}\r\n      <sup>{hash && '♯'}</sup>\r\n      {chordModifier && <ChordModifier>{chordModifier}</ChordModifier>}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default FormattedChord;\r\n","import { Note, NoteName } from '../Theory/notes';\r\n\r\nconst notePattern = /^\\s*([A-G])(#)?(\\d)?\\s*$/;\r\n\r\nconst getNoteParts = (note: Note | NoteName) => {\r\n  const [_, noteName, hash, octave] = notePattern.exec(note) ?? [];\r\n  return [noteName, hash, octave];\r\n};\r\n\r\nexport interface Props {\r\n  note: Note | NoteName;\r\n}\r\n\r\nconst FormattedNote = ({ note }: Props) => {\r\n  const [noteName, hash, octave] = getNoteParts(note);\r\n  return (\r\n    <span>\r\n      {noteName}\r\n      <sup>{hash && '♯'}</sup>\r\n      {octave && <sub>{octave}</sub>}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default FormattedNote;\r\n","import { Box, Button, Card, Collapsible, Heading, Text } from 'grommet';\r\nimport { Trash } from 'grommet-icons';\r\nimport { Fragment } from 'react';\r\nimport { ChordName, getChordNotes } from '../Theory/chords';\r\nimport FormattedChord from './FormattedChord';\r\nimport FormattedNote from './FormattedNote';\r\n\r\nexport interface Props {\r\n  chord: ChordName | undefined;\r\n  isEditing: boolean;\r\n  onRemoveChord: (() => void) | undefined;\r\n}\r\n\r\nconst ChordDefinition = ({ chord, isEditing, onRemoveChord }: Props) => {\r\n  const chordNotes = chord ? getChordNotes(chord) : [];\r\n\r\n  return (\r\n    <>\r\n      <Card\r\n        pad={{ horizontal: 'medium', vertical: 'small' }}\r\n        background=\"background-front\"\r\n        border={{ side: 'right', color: 'background-contrast' }}\r\n      >\r\n        <Heading level={2} size=\"small\" color=\"accent-1\" margin=\"none\">\r\n          <FormattedChord chord={chord} />\r\n        </Heading>\r\n      </Card>\r\n      <Box\r\n        direction=\"row\"\r\n        pad={{ horizontal: 'small' }}\r\n        gap=\"small\"\r\n        align=\"center\"\r\n      >\r\n        <Box pad={{ top: 'xsmall' }}>\r\n          <Text>\r\n            {chordNotes.map((n, i) => (\r\n              <Fragment key={n}>\r\n                {i !== 0 && ' '}\r\n                <FormattedNote note={n} />\r\n              </Fragment>\r\n            ))}\r\n          </Text>\r\n        </Box>\r\n        <Collapsible open={isEditing} direction=\"horizontal\">\r\n          <Button\r\n            icon={<Trash />}\r\n            a11yTitle={`Remove chord ${chord}`}\r\n            onClick={onRemoveChord}\r\n          />\r\n        </Collapsible>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChordDefinition;\r\n","import { ChordName } from './chords';\r\nimport { InstrumentName } from './tunings.guitar';\r\n\r\ntype StringPositions = (number | null)[];\r\n\r\nconst chords: Record<\r\n  InstrumentName,\r\n  Partial<Record<ChordName, StringPositions>>\r\n> = {\r\n  guitar: {\r\n    C: [null, 3, 2, 0, 1, 0],\r\n    D: [null, null, 0, 2, 3, 2],\r\n    Dmin: [null, null, 0, 2, 3, 1],\r\n    E: [0, 2, 2, 1, 0, 0],\r\n    Emin: [0, 2, 2, 0, 0, 0],\r\n    // F: [1, 3, 3, 2, 1, 1],\r\n    G: [3, 2, 0, 0, 0, 3],\r\n    A: [null, 0, 2, 2, 2, 0],\r\n    Amin: [null, 0, 2, 2, 1, 0],\r\n    B: [null, 2, 4, 4, 4, 2],\r\n  },\r\n  guitalele: {},\r\n};\r\n\r\nexport default chords;\r\n","import { Note } from './notes';\r\n\r\nexport type InstrumentName = 'guitar' | 'guitalele';\r\n\r\nexport type Tuning = Note[];\r\n\r\nconst tunings: Record<InstrumentName, Tuning> = {\r\n  guitar: ['E2', 'A2', 'D3', 'G3', 'B3', 'E4'],\r\n  guitalele: ['A2', 'D3', 'G3', 'C4', 'E4', 'A4'],\r\n};\r\n\r\nexport default tunings;\r\n","import { Close } from 'grommet-icons';\r\nimport styled, { css } from 'styled-components';\r\nimport { ChordName } from '../Theory/chords';\r\nimport chords from '../Theory/chords.guitar';\r\nimport { getNoteParts, NoteName, transposeNote } from '../Theory/notes';\r\nimport tunings, { InstrumentName, Tuning } from '../Theory/tunings.guitar';\r\nimport FormattedNote from './FormattedNote';\r\n\r\nexport interface Props {\r\n  instrument?: InstrumentName;\r\n  chord: ChordName | undefined;\r\n  highlightedNote: NoteName | undefined;\r\n  onHighlightNote: ((noteToSelect: NoteName | undefined) => void) | undefined;\r\n}\r\n\r\nconst StyledTable = styled.table`\r\n  box-sizing: border-box;\r\n\r\n  cursor: pointer;\r\n  user-select: none;\r\n\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  text-align: center;\r\n\r\n  td {\r\n    min-width: 36px;\r\n    height: 36px;\r\n\r\n    border-bottom: ${({ theme }) => theme.global.borderSize.xsmall} solid\r\n      ${({ theme }) => theme.global.colors['background-contrast'].dark};\r\n    border-right: ${({ theme }) => theme.global.borderSize.xsmall} solid\r\n      ${({ theme }) => theme.global.colors['text'].dark};\r\n\r\n    &:first-child {\r\n      min-width: 24px;\r\n      border-right-width: ${({ theme }) => theme.global.borderSize.small};\r\n\r\n      background: inherit;\r\n    }\r\n  }\r\n\r\n  tr:last-child > td,\r\n  td:first-child {\r\n    border-bottom: none;\r\n  }\r\n`;\r\n\r\nconst PushedNoteCircle = styled.div`\r\n  width: 34px;\r\n  height: 34px;\r\n  border-radius: 18px;\r\n  text-align: center;\r\n`;\r\n\r\nconst StyledTd = styled.td<{\r\n  isStringMuted: boolean;\r\n  isVisible: boolean;\r\n  isActive: boolean;\r\n  isPushed: boolean;\r\n}>`\r\n  ${({ isStringMuted, isActive, theme }) =>\r\n    isStringMuted\r\n      ? css`\r\n          color: ${theme.global.colors['text-xweak'].dark};\r\n        `\r\n      : css`\r\n          background: ${theme.global.colors['background-contrast'].dark};\r\n          color: ${isActive\r\n            ? theme.global.colors['text'].dark\r\n            : theme.global.colors['text-weak'].dark};\r\n        `}\r\n\r\n  font-weight: ${({ isActive }) => (isActive ? 'bold' : 'normal')};\r\n\r\n  ${PushedNoteCircle} {\r\n    display: ${({ isVisible }) => (isVisible ? 'inline-block' : 'none')};\r\n\r\n    background: ${({ isPushed, theme }) =>\r\n      isPushed ? theme.global.colors['border'].dark : 'transparent'};\r\n  }\r\n\r\n  ${({ isVisible }) =>\r\n    isVisible &&\r\n    css`\r\n      & > :nth-child(2) {\r\n        display: none;\r\n      }\r\n    `}\r\n\r\n  &:hover {\r\n    ${PushedNoteCircle} {\r\n      display: inline-block;\r\n\r\n      background: ${({ isPushed, theme }) =>\r\n        isPushed\r\n          ? theme.global.colors['accent-1']\r\n          : theme.global.colors['background-contrast'].dark};\r\n\r\n      font-weight: bold;\r\n    }\r\n\r\n    & > :nth-child(2) {\r\n      display: none;\r\n    }\r\n  }\r\n`;\r\n\r\nconst StringChord = ({\r\n  instrument = 'guitar',\r\n  chord,\r\n  highlightedNote,\r\n  onHighlightNote,\r\n}: Props) => {\r\n  const chordsForInstrument = chords[instrument];\r\n  const stringPositions = (chord &&\r\n    chord in chordsForInstrument &&\r\n    chordsForInstrument[chord]) || [0, 0, 0, 0, 0, 0];\r\n  const reversedPositions = [...stringPositions].reverse();\r\n\r\n  const maxPosition =\r\n    stringPositions\r\n      .map((p) => p ?? 0)\r\n      .reduce((acc, p) => (acc > p ? acc : p), 4) + 1;\r\n\r\n  const tuning = tunings[instrument] ?? [null, null, null, null, null, null];\r\n  const reversedTuning = [...tuning].reverse() as Tuning;\r\n\r\n  const reversedStringNotes = reversedPositions.map((p, j) =>\r\n    new Array(maxPosition).fill(undefined).map((_, i) => {\r\n      const note = transposeNote(reversedTuning[j], i);\r\n      const [noteName] = getNoteParts(note);\r\n      return {\r\n        isStringMuted: p === null,\r\n        isVisible: i === p || i === 0,\r\n        isActive: i === p,\r\n        isPushed: i === p && i !== 0,\r\n        isHighlighted: highlightedNote === noteName,\r\n        note,\r\n        noteName,\r\n      };\r\n    }),\r\n  );\r\n\r\n  return (\r\n    <StyledTable>\r\n      <tbody>\r\n        {reversedStringNotes.map((s, j) => (\r\n          <tr key={j}>\r\n            {s.map(\r\n              ({\r\n                isStringMuted,\r\n                isVisible,\r\n                isActive,\r\n                isPushed,\r\n                isHighlighted,\r\n                note,\r\n                noteName,\r\n              }) => (\r\n                <StyledTd\r\n                  key={`${j}${note}`}\r\n                  isStringMuted={isStringMuted}\r\n                  isVisible={isVisible || isHighlighted}\r\n                  isActive={isActive || isHighlighted}\r\n                  isPushed={isPushed}\r\n                  onClick={\r\n                    onHighlightNote &&\r\n                    (() =>\r\n                      onHighlightNote(isHighlighted ? undefined : noteName))\r\n                  }\r\n                >\r\n                  <PushedNoteCircle>\r\n                    <FormattedNote note={note} />\r\n                  </PushedNoteCircle>\r\n                  {isStringMuted && !isVisible && <Close size=\"small\" />}\r\n                </StyledTd>\r\n              ),\r\n            )}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </StyledTable>\r\n  );\r\n};\r\n\r\nexport default StringChord;\r\n","import { Card, CardBody, CardHeader } from 'grommet';\r\nimport { ChordName } from '../Theory/chords';\r\nimport { NoteName } from '../Theory/notes';\r\nimport ChordDefinition from './ChordDefinition';\r\nimport StringChord from './StringChord';\r\n\r\nexport interface Props {\r\n  chord?: ChordName;\r\n  isEditing?: boolean;\r\n  highlightedNote?: NoteName;\r\n  onRemoveChord?: (chordToRemove: ChordName) => void;\r\n  onHighlightNote?: (noteToSelect: NoteName | undefined) => void;\r\n}\r\n\r\nconst ChordCard = ({\r\n  chord,\r\n  isEditing,\r\n  highlightedNote,\r\n  onRemoveChord,\r\n  onHighlightNote,\r\n}: Props) => (\r\n  <Card background=\"background-back\" width=\"500px\">\r\n    <CardHeader\r\n      background=\"background-contrast\"\r\n      border={{ side: 'bottom', color: 'background-contrast' }}\r\n      justify=\"between\"\r\n    >\r\n      <ChordDefinition\r\n        chord={chord}\r\n        isEditing={isEditing || false}\r\n        onRemoveChord={chord && onRemoveChord && (() => onRemoveChord(chord))}\r\n      />\r\n    </CardHeader>\r\n    <CardBody\r\n      pad=\"small\"\r\n      border={{ side: 'top', color: 'background-contrast' }}\r\n    >\r\n      <StringChord\r\n        chord={chord}\r\n        highlightedNote={highlightedNote}\r\n        onHighlightNote={onHighlightNote}\r\n      />\r\n    </CardBody>\r\n  </Card>\r\n);\r\n\r\nexport default ChordCard;\r\n","import { Box, Stack, Text } from 'grommet';\r\nimport { Add } from 'grommet-icons';\r\nimport ChordCard from './ChordCard';\r\n\r\nconst EmptyChordCard = () => (\r\n  <Stack fill interactiveChild=\"last\">\r\n    <ChordCard />\r\n    <Box\r\n      fill\r\n      align=\"center\"\r\n      justify=\"center\"\r\n      gap=\"large\"\r\n      background={{ color: 'background', opacity: 'strong' }}\r\n      border={{ color: 'border-semi' }}\r\n    >\r\n      <Add size=\"large\" color=\"accent-1\" />\r\n      <Text size=\"large\" textAlign=\"center\" color=\"accent-1\">\r\n        Add a chord to start\r\n      </Text>\r\n    </Box>\r\n  </Stack>\r\n);\r\n\r\nexport default EmptyChordCard;\r\n","import { Grid } from 'grommet';\r\nimport { useState } from 'react';\r\nimport { ChordName } from '../Theory/chords';\r\nimport { NoteName } from '../Theory/notes';\r\nimport ChordCard from './ChordCard';\r\nimport EmptyChordCard from './EmptyChordCard';\r\n\r\nexport interface Props {\r\n  chords: ChordName[];\r\n  isEditing: boolean;\r\n  onRemoveChord: (chordToRemove: ChordName) => void;\r\n}\r\n\r\nconst ChordCardCollection = ({ chords, isEditing, onRemoveChord }: Props) => {\r\n  const [highlightedNote, setHighlightedNote] = useState<NoteName>();\r\n\r\n  return (\r\n    <Grid columns=\"medium\" gap=\"small\" justify=\"center\">\r\n      {chords.length !== 0 ? (\r\n        chords.map((c) => (\r\n          <ChordCard\r\n            key={c}\r\n            chord={c}\r\n            isEditing={isEditing}\r\n            highlightedNote={highlightedNote}\r\n            onRemoveChord={onRemoveChord}\r\n            onHighlightNote={setHighlightedNote}\r\n          />\r\n        ))\r\n      ) : (\r\n        <EmptyChordCard />\r\n      )}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ChordCardCollection;\r\n","import { Box, Button, Collapsible, Select } from 'grommet';\r\nimport { Add, Checkmark, Edit } from 'grommet-icons';\r\nimport { useCallback, useMemo, useState } from 'react';\r\nimport { ChordName } from '../Theory/chords';\r\n\r\nexport interface Props {\r\n  chords: ChordName[];\r\n  isEditing: boolean;\r\n  onAddChord: (chordToAdd: ChordName) => void;\r\n  onIsEditingChange: (isEditing: boolean) => void;\r\n}\r\n\r\nconst ChordSelector = ({\r\n  chords,\r\n  isEditing,\r\n  onAddChord,\r\n  onIsEditingChange,\r\n}: Props) => {\r\n  const [searchString, setSearchString] = useState('');\r\n\r\n  const matchingChords = useMemo(\r\n    () =>\r\n      chords\r\n        .map((c) => ({ label: c, value: c }))\r\n        .filter((x) =>\r\n          x.label.toLowerCase().includes(searchString.toLowerCase()),\r\n        ),\r\n    [chords, searchString],\r\n  );\r\n\r\n  const handleChange = useCallback(\r\n    ({ value }) => {\r\n      setSearchString('');\r\n      onAddChord(value as ChordName);\r\n    },\r\n    [onAddChord],\r\n  );\r\n\r\n  return (\r\n    <Box direction=\"row\" gap=\"small\" justify=\"end\" align=\"center\">\r\n      <Collapsible open={isEditing} direction=\"horizontal\">\r\n        <Select\r\n          icon={<Add />}\r\n          options={matchingChords}\r\n          valueKey={{ key: 'value', reduce: true }}\r\n          labelKey={(c) => c.label}\r\n          closeOnChange={false}\r\n          placeholder=\"Add chords\"\r\n          searchPlaceholder=\"Search by name\"\r\n          a11yTitle=\"Select chords to add\"\r\n          onSearch={setSearchString}\r\n          onChange={handleChange}\r\n        />\r\n      </Collapsible>\r\n      <Button\r\n        icon={\r\n          <Box direction=\"row\">\r\n            <Collapsible open={isEditing} direction=\"horizontal\">\r\n              <Checkmark />\r\n            </Collapsible>\r\n            <Collapsible open={!isEditing} direction=\"horizontal\">\r\n              <Edit />\r\n            </Collapsible>\r\n          </Box>\r\n        }\r\n        a11yTitle={\r\n          isEditing ? 'Done adding/removing chords' : 'Add/remove chords'\r\n        }\r\n        primary={isEditing}\r\n        onClick={() => onIsEditingChange(!isEditing)}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ChordSelector;\r\n","import {\r\n  Dispatch,\r\n  Reducer,\r\n  ReducerAction,\r\n  ReducerState,\r\n  useMemo,\r\n  useReducer,\r\n} from 'react';\r\n\r\nconst createStoringReducer = <S, A>(\r\n  key: string,\r\n  reducer: Reducer<S, A>,\r\n): Reducer<S, A> => {\r\n  let writeTimeoutRef: number | undefined;\r\n\r\n  const storingReducer: Reducer<S, A> = (state, action) => {\r\n    const newState = reducer(state, action);\r\n\r\n    if (newState !== state) {\r\n      window.clearTimeout(writeTimeoutRef);\r\n\r\n      writeTimeoutRef = window.setTimeout(() => {\r\n        try {\r\n          localStorage.setItem(key, JSON.stringify(newState));\r\n          console.log('Written to local storage', newState);\r\n        } catch (error) {\r\n          // TODO\r\n          console.error(\"Couldn't write to local storage.\", error);\r\n        }\r\n      }, 100);\r\n    }\r\n\r\n    return newState;\r\n  };\r\n\r\n  return storingReducer;\r\n};\r\n\r\nconst readStoredState = <S, _>(key: string, initialState: S): S | undefined => {\r\n  try {\r\n    const rawState = localStorage.getItem(key);\r\n    const readState = rawState && JSON.parse(rawState);\r\n    console.log('Read from local storage', readState);\r\n    return readState;\r\n  } catch (error) {\r\n    // TODO\r\n    console.error(\"Couldn't read from local storage.\", error);\r\n  }\r\n};\r\n\r\nconst useStoringReducer = <R extends Reducer<any, any>>(\r\n  key: string,\r\n  reducer: R,\r\n  initialState: ReducerState<R>,\r\n  initializer?: undefined,\r\n): [ReducerState<R>, Dispatch<ReducerAction<R>>] => {\r\n  const storingReducer = useMemo(() => createStoringReducer(key, reducer), [\r\n    key,\r\n    reducer,\r\n  ]);\r\n  const readState = useMemo(() => readStoredState(key, initialState), [\r\n    key,\r\n    initialState,\r\n  ]);\r\n\r\n  return useReducer(\r\n    storingReducer,\r\n    readState ?? initialState,\r\n    readState ? undefined : initializer,\r\n  );\r\n};\r\n\r\nexport default useStoringReducer;\r\n","import type { Reducer } from 'react';\r\nimport type { ChordName } from '../Theory/chords';\r\nimport { Action } from './actions';\r\n\r\nexport interface State {\r\n  selectedChords: ChordName[];\r\n}\r\n\r\nexport const initialState: State = {\r\n  selectedChords: ['D'],\r\n};\r\n\r\nconst reducer: Reducer<State, Action> = (state, action) => {\r\n  switch (action.type) {\r\n    case 'addChord':\r\n      return !state.selectedChords.find((c) => c === action.chord)\r\n        ? {\r\n            ...state,\r\n            selectedChords: [...state.selectedChords, action.chord],\r\n          }\r\n        : state;\r\n\r\n    case 'removeChord':\r\n      return state.selectedChords.find((c) => c === action.chord)\r\n        ? {\r\n            ...state,\r\n            selectedChords: [\r\n              ...state.selectedChords.filter((c) => c !== action.chord),\r\n            ],\r\n          }\r\n        : state;\r\n\r\n    default:\r\n      throw new Error();\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { ChordName } from '../Theory/chords';\r\nimport chords from '../Theory/chords.guitar';\r\nimport type { State } from './reducer';\r\n\r\nexport const getSelectedChords = (state: State) => state.selectedChords;\r\n\r\nexport const getAvailableChords = (state: State) => {\r\n  const selectedChords = getSelectedChords(state);\r\n  const chordsForInstrument = Object.keys(chords['guitar']) as ChordName[];\r\n  return chordsForInstrument.filter((c) => selectedChords.indexOf(c) < 0);\r\n};\r\n","import { grommet } from 'grommet/themes';\r\nimport { deepMerge } from 'grommet/utils';\r\n\r\n// https://www.shutterstock.com/blog/art-deco-graphic-design-techniques\r\nconst goldColor = '#d1ad70'; // gold\r\nconst aquamarineColor = '#87ccb0'; // aquamarine\r\nconst turquoiseColor = '#91d4cf'; // light turquoise\r\nconst navyBlueColorColor = '#15173d'; // navy blue\r\n\r\nconst theme = deepMerge(grommet, {\r\n  global: {\r\n    colors: {\r\n      background: '#010115', // x-darker navy blue\r\n      'background-back': {\r\n        dark: '#080920', // darker navy blue\r\n        // light: '#EDEDED',\r\n      },\r\n      'background-front': {\r\n        dark: navyBlueColorColor,\r\n        // light: '#FFFFFF',\r\n      },\r\n      'background-contrast': {\r\n        dark: '#3f438a17',\r\n        // light: '#33333310',\r\n      },\r\n\r\n      black: '#00010d', // almost black navy blue\r\n      white: '#fff9ef', // almost white gold\r\n\r\n      brand: aquamarineColor,\r\n      'accent-1': goldColor,\r\n\r\n      border: {\r\n        dark: '#d1ad7080', // semitransparent gold\r\n        // light: '#d1ad7080',\r\n      },\r\n\r\n      'border-semi': {\r\n        dark: '#d1ad7040', // semi-semitransparent gold\r\n        // light: '#d1ad7080',\r\n      },\r\n    },\r\n\r\n    font: {\r\n      family: '\"Josefin Sans\"',\r\n      face:\r\n        \"/* vietnamese */\\n@font-face {\\n  font-family: 'Josefin Sans';\\n  font-style: normal;\\n  font-weight: 400;\\n  src: url(https://fonts.gstatic.com/s/josefinsans/v17/Qw3PZQNVED7rKGKxtqIqX5E-AVSJrOCfjY46_DjQbMlhLzTs.woff2) format('woff2');\\n  unicode-range: U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+1EA0-1EF9, U+20AB;\\n}\\n/* latin-ext */\\n@font-face {\\n  font-family: 'Josefin Sans';\\n  font-style: normal;\\n  font-weight: 400;\\n  src: url(https://fonts.gstatic.com/s/josefinsans/v17/Qw3PZQNVED7rKGKxtqIqX5E-AVSJrOCfjY46_DjQbMhhLzTs.woff2) format('woff2');\\n  unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;\\n}\\n/* latin */\\n@font-face {\\n  font-family: 'Josefin Sans';\\n  font-style: normal;\\n  font-weight: 400;\\n  src: url(https://fonts.gstatic.com/s/josefinsans/v17/Qw3PZQNVED7rKGKxtqIqX5E-AVSJrOCfjY46_DjQbMZhLw.woff2) format('woff2');\\n  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\\n}\\n\" +\r\n        \"/* latin-ext */\\n@font-face {\\n  font-family: 'Limelight';\\n  font-style: normal;\\n  font-weight: 400;\\n  src: url(https://fonts.gstatic.com/s/limelight/v11/XLYkIZL7aopJVbZJHDuoNOlHnnY.woff2) format('woff2');\\n  unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;\\n}\\n/* latin */\\n@font-face {\\n  font-family: 'Limelight';\\n  font-style: normal;\\n  font-weight: 400;\\n  src: url(https://fonts.gstatic.com/s/limelight/v11/XLYkIZL7aopJVbZJHDuoOulH.woff2) format('woff2');\\n  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\\n}\\n\\n/* latin-ext */\\n@font-face {\\n  font-family: 'Limelight';\\n  font-style: normal;\\n  font-weight: 400;\\n  src: url(https://fonts.gstatic.com/s/limelight/v11/XLYkIZL7aopJVbZJHDuoNOlHnnY.woff2) format('woff2');\\n  unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;\\n}\\n/* latin */\\n@font-face {\\n  font-family: 'Limelight';\\n  font-style: normal;\\n  font-weight: 400;\\n  src: url(https://fonts.gstatic.com/s/limelight/v11/XLYkIZL7aopJVbZJHDuoOulH.woff2) format('woff2');\\n  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\\n}\\n\",\r\n    },\r\n  },\r\n\r\n  heading: {\r\n    font: {\r\n      family: '\"Limelight\"',\r\n    },\r\n  },\r\n\r\n  button: {\r\n    border: {\r\n      radius: '3px',\r\n    },\r\n  },\r\n\r\n  card: {\r\n    container: {\r\n      border: 'solid',\r\n      round: 'xxsmall',\r\n      elevation: null,\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","import { Footer, Grommet, Header, Heading, Main, Text } from 'grommet';\r\nimport React, { useCallback, useState } from 'react';\r\nimport './App.css';\r\nimport ChordCardCollection from './Components/ChordCardCollection';\r\nimport ChordSelector from './Components/ChordSelector';\r\nimport useStoringReducer from './Hooks/useStoringReducer';\r\nimport * as actions from './Store/actions';\r\nimport reducer, { initialState } from './Store/reducer';\r\nimport * as selectors from './Store/selectors';\r\nimport theme from './theme';\r\n\r\nconst applicationStateStorageKey = 'applicationState';\r\n\r\nfunction App() {\r\n  const [state, dispatch] = useStoringReducer(\r\n    applicationStateStorageKey,\r\n    reducer,\r\n    initialState,\r\n  );\r\n\r\n  const selectedChords = selectors.getSelectedChords(state);\r\n  const availableChords = selectors.getAvailableChords(state);\r\n\r\n  // Start in edit mode if no chords selected\r\n  const [isEditing, setIsEditing] = useState(selectedChords.length === 0);\r\n\r\n  const handleAddChord = useCallback(\r\n    (chordToAdd) => dispatch(actions.addChord(chordToAdd)),\r\n    [dispatch],\r\n  );\r\n\r\n  const handleRemoveChord = useCallback(\r\n    (chordToRemove) => dispatch(actions.removeChord(chordToRemove)),\r\n    [dispatch],\r\n  );\r\n\r\n  return (\r\n    <Grommet full theme={theme} themeMode=\"dark\">\r\n      <Header\r\n        pad={{ vertical: 'medium', horizontal: 'large' }}\r\n        background=\"brand\"\r\n      >\r\n        <Heading size=\"small\" margin=\"none\">\r\n          Chord Helper\r\n        </Heading>\r\n      </Header>\r\n      <Main pad=\"large\" gap=\"medium\">\r\n        <ChordSelector\r\n          chords={availableChords}\r\n          isEditing={isEditing}\r\n          onAddChord={handleAddChord}\r\n          onIsEditingChange={setIsEditing}\r\n        />\r\n        <ChordCardCollection\r\n          chords={selectedChords}\r\n          isEditing={isEditing}\r\n          onRemoveChord={handleRemoveChord}\r\n        />\r\n      </Main>\r\n      <Footer\r\n        pad={{ vertical: 'small', horizontal: 'large' }}\r\n        background=\"black\"\r\n        justify=\"center\"\r\n      >\r\n        <Text color=\"text-xweak\">Helping you with chords since 2021.</Text>\r\n      </Footer>\r\n    </Grommet>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import type { ChordName } from '../Theory/chords';\r\n\r\nexport interface AddChordAction {\r\n  type: 'addChord';\r\n  chord: ChordName;\r\n}\r\n\r\nexport const addChord = (chord: ChordName): AddChordAction => ({\r\n  type: 'addChord',\r\n  chord,\r\n});\r\n\r\nexport interface RemoveChordAction {\r\n  type: 'removeChord';\r\n  chord: ChordName;\r\n}\r\n\r\nexport const removeChord = (chord: ChordName): RemoveChordAction => ({\r\n  type: 'removeChord',\r\n  chord,\r\n});\r\n\r\nexport type Action = AddChordAction | RemoveChordAction;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}